
Семин
Создать package – animals. Работу продолжаем в нем
Создать абстрактный класс Animal с полями год рождения, вес, кол-во
конечностей
Реализовать наследников класса Animal классы Lion и Snake, добавив к ним по
одному доп. полю объем гривы и длина тела соответственно.
4. Реализовать метод кормления void feed(int foodWeight), после которого вес
животного увеличивается.


Создать в классе Lion и Snake статичные финальные поля MAX_WEIGHT и TYPE и на
той же строке объявления присвоить им значения.
Добавить логику в метод feed, чтобы животное не могло превысить свой
максимальный вес.
3. Реализовать логику так, чтобы метод feed находился в классе Animal и
использовал внутри себя абстрактный метод


Создать package – factory. Работу продолжаем в нем
Создать класс LionsFactory
Реализовать в нем статический метод для создания коллекции львов с определенным кол-вом в ней:
ArrayList<Lion> createLions (int lionCount)
В методе main создать коллекцию львов и положить её содержимое в клетку. Посмотрите состояние львов, покормите львов в клетке, проверьте изменился ли у них вес.

Создать класс LionComporator, реализующий интерфейс Comparator<Lion>
Реализовать контракт compare() со сравнением по объему гривы
Модифицировать класс LionCage, добавив в него метод сортировки львов по гриве 
    
Модифицировать класс Lion, заставив его реализовать интерфейс
Comparable<Lion>
Реализовать контракт compareTo () со сравнением по возрасту льва
Добавить класс LionCage метод сортировки львов по возрасту
void sortLions()
     
Создать package – cage. Работу продолжаем в нем
Создать интерфейс AnimalCage, который содержит абстрактные методы для:
добавления в клетку животного
передачи корма в клетку
очистку клетки
Создать для сущности Lion отдельный LionCage, реализующий интерфейс
AnimalCage. В клетке должна хранится информация о находящихся в ней львах и
объем загрязнения клетки.